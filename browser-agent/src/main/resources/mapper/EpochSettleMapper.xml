<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.browser.dao.mapper.EpochBusinessMapper">
    <update id="settle" parameterType="com.platon.browser.dao.param.epoch.Settle">
        <foreach collection="stakingList" item="staking">
            /*2、更新节点*/
            update `node` set
            `staking_locked` = #{staking.stakingLocked},
            `staking_hes` = #{staking.stakingHes},
            `staking_reduction` = #{staking.stakingReduction},
            `status` = #{staking.status},
            `stat_staking_reward_value` = `stat_staking_reward_value` + #{staking.stakingRewardValue},
            `is_settle` = #{staking.isSettle},
            `pre_dele_annualized_rate` = #{staking.preDeleAnnualizedRate},
            `dele_annualized_rate` = #{staking.deleAnnualizedRate},
            `annualized_rate` = #{staking.annualizedRate},
            `annualized_rate_info` = #{staking.annualizedRateInfo},
            `total_dele_reward` = #{staking.totalDeleReward},
            `exception_status` = #{staking.exceptionStatus},
            `low_rate_slash_count` = #{staking.lowRateSlashCount}
            where `node_id` =  #{staking.nodeId};
            /*1、更新质押*/
            update `staking` set
            `staking_locked` = #{staking.stakingLocked},
            `staking_hes` = #{staking.stakingHes},
            `staking_reduction` = #{staking.stakingReduction},
            `status` = #{staking.status},
            `staking_reward_value` =  `staking_reward_value` + #{staking.stakingRewardValue},
            `is_settle` = #{staking.isSettle},
            `annualized_rate` = #{staking.annualizedRate},
            `pre_dele_annualized_rate` = #{staking.preDeleAnnualizedRate},
            `dele_annualized_rate` = #{staking.deleAnnualizedRate},
            `annualized_rate_info` = #{staking.annualizedRateInfo},
            `total_dele_reward` = #{staking.totalDeleReward},
            `exception_status` = #{staking.exceptionStatus},
            `low_rate_slash_count` = #{staking.lowRateSlashCount}
            where `node_id` = #{staking.nodeId}
            and staking_block_num = #{staking.stakingBlockNum};
        </foreach>
        /*3、更新委托*/
        update `delegation` set
            `delegate_locked` = `delegate_hes` + `delegate_locked`,
            `delegate_hes` = 0
        where `is_history` = 2
        and `delegate_hes` > 0;
        /*4、更新质押*/
        update `staking` set
            `stat_delegate_locked` = `stat_delegate_hes` + `stat_delegate_locked`,
            `stat_delegate_hes` = 0
        where `stat_delegate_hes` > 0;

        <foreach collection="exitNodeList" item="nodeId">
            /*5、节点委托奖励累加*/
            update `node` set
            `pre_total_dele_reward` = `pre_total_dele_reward`+`total_dele_reward`
            where `node_id` =  #{nodeId};
        </foreach>
        update `node` set `total_dele_reward`=0 where `status` = 3;
        /*当修改委托奖励比例所在结算周期小于当前结算周期时，统一把reward_per替换为next_reward_per的值*/
        update node set reward_per=next_reward_per where next_reward_per_mod_epoch <![CDATA[ < ]]> #{settingEpoch};
        update staking set reward_per=next_reward_per where next_reward_per_mod_epoch <![CDATA[ < ]]> #{settingEpoch};
    </update>

    <update id="updateGasEstimate">
        <foreach collection="list" item="item" separator=";">
            update `gas_estimate` set `epoch` = `epoch`+1 where `node_id`= #{item.nodeId} and `sbn`=#{item.sbn}
        </foreach>
    </update>
</mapper>